# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript
trigger:
  branches:
    include:
    - main

pr:
  branches:
    include:
    - main

pool:
  vmImage: ubuntu-latest

stages:
  - stage: build
    displayName: build

    jobs:
      - template: build.yml
  
  - stage: release
    dependsOn: build
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
    jobs:
      - deployment: release
        environment: production
        pool:
          vmImage: ubuntu-latest
        variables:
          merge_commit: $(Build.SourceVersion)
        strategy:
          runOnce:
            deploy:
              steps:
              - checkout: self
                persistCredentials: true
              - task: NodeTool@0
                inputs:
                  versionSpec: '20.x'
                displayName: 'Install Node.js'
              - script: |
                  git fetch --tags
                displayName: Fetch all tags
              - script: |
                  previous_version=$(git tag | grep -E '^[0-9]+\.[0-9]+\.[0-9]+$' | sort --version-sort --reverse | head -n 1)
                  if ["$previous_version" == ""]; then
                    previous_version=v0.0.0
                  fi
                  if [[ "$previous_version" =~ [0-9]+\.[0-9]+\.[0-9]+ ]]; then
                      echo "Previous version format is valid: $previous_version"
                  else
                      echo "Unknown previous version format: $previous_version"
                      exit 1
                  fi
                  echo "##vso[task.setvariable variable=previous_version]$previous_version"
                  echo "Current tag version: $previous_version"
                displayName: Get previous tag version
              - script: |
                  previous_version=$(echo $(previous_version))
                  #get npm version from package.json
                  npm_version=$(node -p "require('./package.json').version")
                  echo "NPM version: $npm_version"

                  # previous_version_semver=${previous_version#v}
                  echo "Previous tag version: $previous_version"

                  if [[ ! "$npm_version" > "$previous_version" ]]; then
                    echo "Error: NPM version ($npm_version) matches latest git tag/release ($previous_version). Please update version in package.json"
                    exit 1
                  fi

                  echo "##vso[task.setvariable variable=npm_version]$npm_version"
                displayName: Check new version against latest
              - script: |
                  npm_version=$(echo $(npm_version))
                  echo "----"
                  echo $(merge_commit)
                  echo $npm_version
                  echo "----"
                  git tag -f $npm_version $(merge_commit)
                  git push -f origin $npm_version
                displayName: Tag commit with new verison






