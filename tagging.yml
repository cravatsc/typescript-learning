jobs:
  - job: TagBranchWithSemver
    displayName: Tag Branch with Semantic Version
    pool:
      vmImage: ubuntu-latest
    
    variables:
      merge_commit: $(Build.SourceVersion)

    steps:
      - checkout: self
        persistCredentials: true
      - script: |
          git fetch --tags --quiet
        displayName: Fetch all tags
      - script: |
          previous_version=$(git tag | grep -E '^[0-9]+\.[0-9]+\.[0-9]+$' | sort --version-sort --reverse | head -n 1)
          if ["$previous_version" == ""]; then
            previous_version=0.0.0
          fi
          if [[ "$previous_version" =~ [0-9]+\.[0-9]+\.[0-9]+ ]]; then
              echo "Previous version format is valid: $previous_version"
          else
              echo "Unknown previous version format: $previous_version"
              exit 1
          fi
          echo "##vso[task.setvariable variable=previous_version]$previous_version"
          echo "Current version: $previous_version"
        displayName: Get previous version
      - script: |
          previous_version=$(echo $(previous_version))
          
          major_version=$(echo $previous_version | cut -d '.' -f1)
          minor_version=$(echo $previous_version | cut -d '.' -f2)
          patch_version=$(echo $previous_version | cut -d '.' -f3)

          major=$(awk -F'=' '/^major/ {print $2}' version.txt | tr -d '\r')
          minor=$(awk -F'=' '/^minor/ {print $2}' version.txt | tr -d '\r')
          echo "File major: $major"
          echo "File minor: $minor"
          echo "Prev major: $major_version"
          echo "Prev minor: $minor_version"
          echo "Prev patch: $patch_version"
          
          if [ "$major" -eq "$major_version" ]; then
            echo "Updating major version."
            major_version=$((major))
            minor_version=0
            patch_version=0
          elif [ "$minor" -eq "$minor_version" ]; then
            echo "Updating minor version."
            minor_version=$((minor))
            patch_version=0
          else
            echo "Updating patch version."
            patch_version=$((patch_version + 1))
          fi

          new_version="$major_version.$minor_version.$patch_version"
          echo "##vso[task.setvariable variable=new_version]$new_version"
          echo "New version: $new_version"
        displayName: Generate new version
      - script: |
          new_version=$(echo $(new_version))
          echo $new_version
          echo $(merge_commit)
          git tag -f $new_version $(merge_commit)
          git push -f origin $new_version
        displayName: Tag commit with new version
